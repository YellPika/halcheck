name: CMake on multiple platforms

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false

      matrix:
        os: [windows-latest]
        build_type: [Release]
        compiler: [cl]
        standard: [11]
        # os: [ubuntu-latest, windows-latest]
        # build_type: [Release]
        # compiler: [g++, clang++, cl]
        # standard: [11,14,17,20]
        # include:
        #   - os: windows-latest
        #     compiler: cl
        #   - os: ubuntu-latest
        #     compiler: g++
        #   - os: ubuntu-latest
        #     compiler: clang++
        # exclude:
        #   - os: windows-latest
        #     compiler: g++
        #   - os: windows-latest
        #     compiler: clang++
        #   - os: ubuntu-latest
        #     compiler: cl

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -DCMAKE_CXX_STANDARD=${{ matrix.standard }}
        ${{ matrix.compiler == 'clang++' && '-DCMAKE_CXX_FLAGS=-stdlib=libc++' || '' }}
        -DCMAKE_CXX_EXTENSIONS=OFF
        -DHALCHECK_LIBFUZZER=OFF
        -DHALCHECK_TYCHE=OFF
        -DHALCHECK_FORMAT=OFF
        -S ${{ github.workspace }}

    - name: Debug
      uses: mxschmitt/action-tmate@v3

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      if: ${{ matrix.compiler != 'cl' }}
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }} --output-on-failure
